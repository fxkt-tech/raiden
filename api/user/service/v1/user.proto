syntax = "proto3";

package user.v1;

import "validate/validate.proto";
import "google/api/annotations.proto";

option go_package = "fxkt.tech/raiden/api/user/service/v1;v1";

service UserSystem {
  rpc Register (RegisterRequest) returns (RegisterReply) {
    option (google.api.http) = {
      post: "/api/user/v1/register",
      body: "*",
    };
  }
  rpc Info (InfoRequest) returns (InfoReply) {
    option (google.api.http) = {
      get: "/api/user/v1/info",
    };
  }
  rpc Followers (FollowersRequest) returns (FollowersReply) {
    option (google.api.http) = {
      get: "/api/user/v1/followers",
    };
  }
  rpc Following (FollowingRequest) returns (FollowingReply) {
    option (google.api.http) = {
      get: "/api/user/v1/following",
    };
  }
  rpc Relation (RelationRequest) returns (RelationReply) {
    option (google.api.http) = {
      post: "/api/user/v1/relation",
      body: "*",
    };
  }
}

// model

message User {
  int32 uid = 1;
  string nick = 2;
}

// request-reply

message RegisterRequest {
  string nick = 1 [(validate.rules).string = { min_len: 3, max_len: 8 }];
}
message RegisterReply {
  User user = 1;
}

message InfoRequest {
  int32 uid = 1;
}
message InfoReply {
  User user = 1;
}

message FollowersRequest {
  int32 uid = 1 [(validate.rules).int32 = { gt: 0 }];
  int32 page = 2 [(validate.rules).int32 = { gt: 0 }];
  int32 count = 3 [(validate.rules).int32 = { gt: 0, lte: 50 }];
}
message FollowersReply {
  repeated User users = 1;
  int32 total = 2;
}

message FollowingRequest {
  int32 uid = 1 [(validate.rules).int32 = { gt: 0 }];
  int32 page = 2 [(validate.rules).int32 = { gt: 0 }];
  int32 count = 3 [(validate.rules).int32 = { gt: 0, lte: 50 }];
}
message FollowingReply {
  repeated User users = 1;
  int32 total = 2;
}

message RelationRequest {
  int32 active_uid = 1 [(validate.rules).int32 = { gt: 0 }];
  int32 passive_uid = 2 [(validate.rules).int32 = { gt: 0 }];
  int32 action = 3;
}
message RelationReply {}