syntax = "proto3";

package raiden.v1;

import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";

option go_package = "fxkt.tech/raiden/api/raiden/v1;v1";

service MessageSystem {
  rpc RegisterUser (RegisterUserRequest) returns (RegisterUserReply) {
    option (google.api.http) = {
      post: "/v1/user/register",
      body: "*",
      // response_body: "user",
    };
  }
  rpc Friends (FriendsRequest) returns (FriendsReply) {
    option (google.api.http) = {
      get: "/v1/user/friends",
    };
  }
  rpc ChatHistory (ChatHistoryRequest) returns (ChatHistoryReply) {
    option (google.api.http) = {
      get: "/v1/message/history",
    };
  }
  rpc SendMessage (SendMessageRequest) returns (SendMessageReply) {
    option (google.api.http) = {
      post: "/v1/message/send",
      body: "*",
    };
  }
  rpc Subscribe (SubscribeRequest) returns (SubscribeReply) {
    option (google.api.http) = {
      post: "/v1/message/subscribe",
      body: "*",
    };
  }
}

// model

message User {
  int32 uid = 1;
  string nick = 2;
}

message Message {
  User sender = 1;
  User recver = 2;
  Content content = 3;
  google.protobuf.Timestamp ctime = 4;
}

message Content {
  string text = 1;
}

// request-reply

message RegisterUserRequest {
  string nick = 1;
}
message RegisterUserReply {
  User user = 1;
}

message FriendsRequest {
  int32 uid = 1;
  int32 page = 2;
  int32 count = 3;
}
message FriendsReply {
  repeated User friends = 1;
}

message ChatHistoryRequest {
  int32 my_uid = 1;
  int32 friend_uid = 2;
  int32 page = 3;
  int32 count = 4;
}
message ChatHistoryReply {
  repeated Message msgs = 1;
}

message SendMessageRequest {
  int32 sender_uid = 1;
  Content content = 2;
  int32 recver_uid = 3;
}
message SendMessageReply {}

message SubscribeRequest {}
message SubscribeReply {}